{"version":3,"file":"static/js/929.12696cd5.chunk.js","mappings":"oLACA,SAAgB,cAAgB,oCAAoC,KAAO,2BAA2B,IAAM,2B,sBCUrG,MAAMA,EAAeA,KAC1B,MAAMC,GAAWC,EAAAA,EAAAA,MAkBjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,cAAkBC,UAChCC,EAAAA,EAAAA,MAAA,QAAMH,UAAWC,EAAAA,KAAUG,SAlBVC,IACnBA,EAAEC,iBACF,MAAMC,EAAOF,EAAEG,cACfX,GACEY,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,QACLC,EAAAA,OAAAA,QAAe,+BAAgC,CAC7CC,SAAU,cACV,EAKmDC,aAAa,MAAKhB,SAAA,EACnEC,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAAA,MAAUC,SAAA,CAAC,YAE3BH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EAAAA,kBACXkB,KAAK,OACLT,KAAK,OACLU,UAAQ,QAGZjB,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAAA,MAAUC,SAAA,CAAC,SAE3BH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EAAAA,kBACXkB,KAAK,QACLT,KAAK,QACLU,UAAQ,QAGZjB,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAAA,MAAUC,SAAA,CAAC,YAE3BH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EAAAA,kBACXkB,KAAK,WACLT,KAAK,WACLU,UAAQ,QAGZrB,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,IAASkB,KAAK,SAAQjB,SAAC,iBAIxC,ECrDV,EATqBmB,KAEjBlB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,cACPH,EAAAA,EAAAA,KAACH,EAAY,M","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"RegisterForm_formContainer__C-4Cm\",\"form\":\"RegisterForm_form__Tv43W\",\"btn\":\"RegisterForm_btn__bgTuW\"};","import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/authOperations';\nimport css from './RegisterForm.module.css';\nimport { Notify } from 'notiflix';\n\n/* Controlled Form Component vs Uncontrolled Form Component\n *\n * Controlled - data is controlled by state\n * Uncontrolled - data is controlled by the DOM\n */\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n    Notify.success('Welcome to your Contact Page', {\n      position: 'center-top',\n    });\n  };\n\n  return (\n    <div className={css.formContainer}>\n      <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n        <label className={css.label}>\n          Username\n          <input\n            className={css.registerFormInput}\n            type=\"text\"\n            name=\"name\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Email\n          <input\n            className={css.registerFormInput}\n            type=\"email\"\n            name=\"email\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Password\n          <input\n            className={css.registerFormInput}\n            type=\"password\"\n            name=\"password\"\n            required\n          />\n        </label>\n        <button className={css.btn} type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { RegisterForm } from '../components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <div>\n      <title>Register</title>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["RegisterForm","dispatch","useDispatch","_jsx","className","css","children","_jsxs","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","Notify","position","autoComplete","type","required","RegisterPage"],"sourceRoot":""}